# -*- coding: utf-8 -*-
"""kmeans perormance analysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WI61-zctFcjz7odcEjodzrg4iUWRio5S

Performing Customer Segmentation Analysis in a German Bank Using k-means

This is the German Credit Dataset from the UCI Machine
Learning Repository. It is available from the Packt repository
at https://packt.live/31L2c2b.
"""

import pandas as pd
import numpy as np
from sklearn.preprocessing import StandardScaler
from sklearn.cluster import KMeans

file_url = 'https://raw.githubusercontent.com/PacktWorkshops/The-Data-Science-Workshop/master/Chapter05/DataSet/german.data-numeric'

df = pd.read_csv(file_url, header=None, sep= '\s\s+', prefix='X',usecols = ['X3', 'X9'])

df.head()

standard_scaler = StandardScaler()

scaled_x = standard_scaler.fit_transform(df)

clusters = pd.DataFrame()
inertia = []

clusters['cluster_range'] = range(1, 15)

for i in clusters['cluster_range']:
  kmeans = KMeans(n_clusters=i).fit(scaled_x)
  inertia.append(kmeans.inertia_)

inertia

clusters['inertia'] = inertia
clusters

import altair as alt

alt.Chart(clusters).mark_line()\
   .encode(alt.X('cluster_range'), alt.Y('inertia'))

optim_cluster = 5

kmeans = KMeans(random_state=1, n_clusters=optim_cluster, \
                init='random', n_init=1)
kmeans.fit(scaled_x)

df['cluster5'] = kmeans.predict(scaled_x)

scatter_plot = alt.Chart(df).mark_circle()
scatter_plot.encode(x='X3', \
                    y='X9', \
                    color='cluster5:N', \
                    tooltip=['cluster5', \
                             'X3','X9'])\
                   .interactive()

